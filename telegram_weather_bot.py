import os
import logging
import pytz
from datetime import datetime
from telegram import Update, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)
import requests

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
OWM_KEY = os.getenv("OWM_KEY")
OWNER_ID = int(os.getenv("OWNER_ID"))
WEBHOOK_URL = os.getenv("WEBHOOK_URL")
PORT = int(os.getenv("PORT", 10000))

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
location_keyboard = KeyboardButton(text="üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
markup = ReplyKeyboardMarkup([[location_keyboard]], resize_keyboard=True)

async def start_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:",
        reply_markup=markup,
    )

async def location_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.location:
        lat = update.message.location.latitude
        lon = update.message.location.longitude

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã
        weather_url = (
            f"https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={OWM_KEY}&units=metric&lang=ru"
        )
        weather_data = requests.get(weather_url).json()

        if weather_data.get("main"):
            temp = weather_data["main"]["temp"]
            feels = weather_data["main"]["feels_like"]
            weather_description = weather_data["weather"][0]["description"].capitalize()
            city = weather_data.get("name", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≥–æ—Ä–æ–¥")

            # –û–±—Ä–∞—Ç–Ω–æ–µ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ (–ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å)
            geo_url = (
                f"https://nominatim.openstreetmap.org/reverse?lat={lat}&lon={lon}&format=json"
            )
            geo_data = requests.get(geo_url).json()
            address = geo_data.get("display_name", "–ê–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω")

            # –ú–µ—Å—Ç–Ω–æ–µ –≤—Ä–µ–º—è
            tz = pytz.timezone("Europe/Chisinau")
            local_time = datetime.now(tz).strftime("%H:%M:%S")

            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
            text = (
                f"üåç –ì–æ—Ä–æ–¥: {city}\n"
                f"üìç –ê–¥—Ä–µ—Å: {address}\n"
                f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels}¬∞C)\n"
                f"‚òÅÔ∏è –ü–æ–≥–æ–¥–∞: {weather_description}\n"
                f"üïí –ú–µ—Å—Ç–Ω–æ–µ –≤—Ä–µ–º—è: {local_time} (Europe/Chisinau)\n\n"
                f"üî¢ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {lat}, {lon}"
            )

            # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await update.message.reply_text(text)

            # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü—É –±–æ—Ç–∞
            await context.bot.send_message(chat_id=OWNER_ID, text=f"üì¨ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n\n{text}")
        else:
            await update.message.reply_text("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ.")

if __name__ == "__main__":
    application = Application.builder().token(BOT_TOKEN).build()

    application.add_handler(CommandHandler("start", start_handler))
    application.add_handler(MessageHandler(filters.LOCATION, location_handler))

    application.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        webhook_url=WEBHOOK_URL,
    )


