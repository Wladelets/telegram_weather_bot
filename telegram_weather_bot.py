import os
import logging
import requests
from telegram import Update, InputMediaPhoto
from telegram.ext import (
    Application, CommandHandler, MessageHandler, filters, ContextTypes
)
from geopy.geocoders import Nominatim

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
OWNER_ID = os.getenv("OWNER_ID")  # –¢–µ–ª–µ–≥—Ä–∞–º ID –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–æ—Ç–∞
OPENWEATHER_TOKEN = os.getenv("OPENWEATHER_TOKEN")

logging.basicConfig(level=logging.INFO)

# === –ü–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º ===
def get_address(lat, lon):
    geolocator = Nominatim(user_agent="telegram-weather-bot")
    location = geolocator.reverse((lat, lon), language="ru")
    return location.address if location else "–ê–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"

# === –ü–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É ===
def get_weather(lat, lon):
    url = (
        f"https://api.openweathermap.org/data/2.5/weather?"
        f"lat={lat}&lon={lon}&appid={OPENWEATHER_TOKEN}&units=metric&lang=ru"
    )
    r = requests.get(url)
    data = r.json()

    if r.status_code != 200:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É."

    desc = data["weather"][0]["description"].capitalize()
    temp = data["main"]["temp"]
    feels = data["main"]["feels_like"]
    humidity = data["main"]["humidity"]
    wind = data["wind"]["speed"]

    return (
        f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n"
        f"ü§î –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels}¬∞C\n"
        f"üí® –í–µ—Ç–µ—Ä: {wind} –º/—Å\n"
        f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
        f"‚òÅÔ∏è {desc}"
    )

# === –ö–æ–º–∞–Ω–¥–∞ /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏—à–ª–∏ –º–Ω–µ —Å–º–∞–π–ª–º–∫ üìç")


# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ ===
async def handle_location(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    location = update.message.location
    lat, lon = location.latitude, location.longitude

    address = get_address(lat, lon)
    weather = get_weather(lat, lon)

    map_url = f"https://static-maps.yandex.ru/1.x/?ll={lon},{lat}&size=450,300&z=14&l=map&pt={lon},{lat},pm2rdm"

    # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    msg = (
        f"üìç –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è:\n"
        f"–®–∏—Ä–æ—Ç–∞: {lat}\n–î–æ–ª–≥–æ—Ç–∞: {lon}\n\n"
        f"üè† –ê–¥—Ä–µ—Å: {address}\n\n"
        f"{weather}"
    )
    await update.message.reply_photo(photo=map_url, caption=msg)

    # –°–æ–æ–±—â–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü—É
    if OWNER_ID:
        owner_text = (
            f"üë§ @{user.username or user.first_name} –ø—Ä–∏—Å–ª–∞–ª –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é:\n"
            f"üó∫ {address}\n"
            f"üìç lat={lat}, lon={lon}\n\n"
            f"{weather}"
        )
        await context.bot.send_photo(chat_id=int(OWNER_ID), photo=map_url, caption=owner_text)


# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ ===
async def error_handler(update, context):
    logging.error(f"–û—à–∏–±–∫–∞: {context.error}")


# === –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ===
def main():
    app = Application.builder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.LOCATION, handle_location))
    app.add_error_handler(error_handler)

    app.run_polling()


if __name__ == "__main__":
    main()



